# query address(
#   $name: String!
#   $tokensLimit: Int = 10
#   $includeProfile: Boolean = false
#   $includeReverseProfile: Boolean = false
#   $filterSuspectedScams: Boolean = false
#   $includeTokens: Boolean = false
# ) {
#   address(name: $name) {
#     address
#     profile @include(if: $includeProfile) {
#       ...GlobalKeys
#       ...CommonServiceKeys
#     }
#     reverseProfile @include(if: $includeReverseProfile) {
#       ...GlobalKeys
#       ...CommonServiceKeys
#     }
#     tokens(
#       limit: $tokensLimit
#       filter: { filterSuspectedScams: $filterSuspectedScams }
#     ) @include(if: $includeTokens) {
#       ...TokenInfo
#     }
#   }
# }

# query token(
#   $contract: String!
#   $id: Int
#   $tokenId: String
#   $includeOwnerInfo: Boolean = false
#   $includeOwnerProfile: Boolean = false
#   $includeOwnerReverseProfile: Boolean = false
# ) {
#   token(contract: $contract, id: $id, tokenId: $tokenId) {
#     ...TokenInfo
#     ...TokenOwnerInfo @include(if: $includeOwnerInfo)
#   }
# }

# query tokens(
#   $filter: TokensFilter!
#   $limit: Int = 10
#   $cursor: String
#   $includeOwnerProfile: Boolean = false
#   $includeOwnerReverseProfile: Boolean = false
#   $includeOwnerInfo: Boolean = false
# ) {
#   tokens(filter: $filter, limit: $limit, cursor: $cursor) {
#     nextCursor
#     tokens {
#       ...TokenInfo
#       ...TokenOwnerInfo @include(if: $includeOwnerInfo)
#     }
#   }
# }

# query tokenTransfers(
#   $filter: TransfersFilter!
#   $limit: Int = 10
#   $cursor: String
#   $includeERC721Metadata: Boolean = false
#   $includeFromProfile: Boolean = false
#   $includeFromReverseProfile: Boolean = false
#   $includeFromTokensInfo: Boolean = false
#   $fromTokensLimit: Int = 10
#   $fromTokensFilterSuspectedScam: Boolean = false
#   $includeToProfile: Boolean = false
#   $includeToReverseProfile: Boolean = false
#   $includeToTokensInfo: Boolean = false
#   $toTokensLimit: Int = 10
#   $toTokensFilterSuspectedScam: Boolean = false
# ) {
#   tokenTransfers(filter: $filter, limit: $limit, cursor: $cursor) {
#     nextCursor
#     tokenTransfers {
#       blockTimestamp
#       hash
#       id
#       token
#       erc721Metadata @include(if: $includeERC721Metadata) {
#         ...TokenInfo
#       }
#       from {
#         address
#         profile @include(if: $includeFromProfile) {
#           ...CommonServiceKeys
#           ...GlobalKeys
#         }
#         reverseProfile @include(if: $includeFromReverseProfile) {
#           ...CommonServiceKeys
#           ...GlobalKeys
#         }
#         tokens(
#           limit: $fromTokensLimit
#           filter: { filterSuspectedScams: $fromTokensFilterSuspectedScam }
#         ) @include(if: $includeFromTokensInfo) {
#           ...TokenInfo
#         }
#       }
#       to {
#         address
#         profile @include(if: $includeToProfile) {
#           ...CommonServiceKeys
#           ...GlobalKeys
#         }
#         reverseProfile @include(if: $includeToReverseProfile) {
#           ...CommonServiceKeys
#           ...GlobalKeys
#         }
#         tokens(
#           limit: $toTokensLimit
#           filter: { filterSuspectedScams: $toTokensFilterSuspectedScam }
#         ) @include(if: $includeToTokensInfo) {
#           ...TokenInfo
#         }
#       }
#     }
#   }
# }

# fragment TokenOwnerInfo on TokenMetadata {
#   ownerAddress {
#     address
#     profile @include(if: $includeOwnerProfile) {
#       ...GlobalKeys
#       ...CommonServiceKeys
#     }
#     reverseProfile @include(if: $includeOwnerReverseProfile) {
#       ...GlobalKeys
#       ...CommonServiceKeys
#     }
#   }
# }

# fragment TokenInfo on TokenMetadata {
#   attributes {
#     displayType
#     traitType
#     value
#   }
#   contractAddress
#   description
#   displayName
#   id
#   imageUrl
#   mintedAt
#   name
#   originalImageUrl
#   thumbnailUrl
#   tokenId
#   type
# }

# fragment GlobalKeys on Profile {
#   name
#   avatar: text(key: "avatar")
#   description: text(key: "description")
#   display: text(key: "display")
#   email: text(key: "email")
#   keywords: text(key: "keywords")
#   mail: text(key: "mail")
#   notice: text(key: "notice")
#   location: text(key: "location")
#   phone: text(key: "phone")
#   url: text(key: "url")
# }

# fragment CommonServiceKeys on Profile {
#   github: text(key: "com.github")
#   peepeth: text(key: "com.peepeth")
#   linkedin: text(key: "com.linkedin")
#   twitter: text(key: "com.twitter")
#   keybase: text(key: "io.keybase")
#   telegram: text(key: "org.telegram")
# }

query address(
  $address: String!
  $tokensLimit: Int = 10
  $includeProfile: Boolean = false
  $includeReverseProfile: Boolean = false
  $includeTokens: Boolean = false
) {
  address(address: $address) {
    address
    profile @include(if: $includeProfile) {
      ...GlobalKeys
      ...CommonServiceKeys
    }
    reverseProfile @include(if: $includeReverseProfile) {
      ...GlobalKeys
      ...CommonServiceKeys
    }
    tokens(
      limit: $tokensLimit
    ) @include(if: $includeTokens) {
      ...TokenInfo
    }
  }
}

fragment TokenInfo on NonFungibleToken {
  animation {
    blurhash
  }
  backgroundColor
  contract
  description
  externalUrl
  image {
    blurhash
  }
  imageStorageType
  mintPrice
  mintTransaction {
    blockNumber
  }
  name
  owner {
    address
  }
  sales {
    eventIndex
  }
  tokenId
  tokenUri
  youtubeUrl
}

fragment CommonServiceKeys on Profile {
  github: text(key: "com.github")
  peepeth: text(key: "com.peepeth")
  linkedin: text(key: "com.linkedin")
  twitter: text(key: "com.twitter")
  keybase: text(key: "io.keybase")
  telegram: text(key: "org.telegram")
}

fragment GlobalKeys on Profile {
  name
  avatar: text(key: "avatar")
  description: text(key: "description")
  display: text(key: "display")
  email: text(key: "email")
  keywords: text(key: "keywords")
  mail: text(key: "mail")
  notice: text(key: "notice")
  location: text(key: "location")
  phone: text(key: "phone")
  url: text(key: "url")
}