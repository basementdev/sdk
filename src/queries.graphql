query address(
  $name: String!
  $tokensLimit: Int = 10
  $includeProfile: Boolean = false
  $includeReverseProfile: Boolean = false
  $filterSuspectedScams: Boolean = false
  $includeTokens: Boolean = false
) {
  address(name: $name) {
    address
    profile @include(if: $includeProfile) {
      ...GlobalKeys
      ...CommonServiceKeys
    }
    reverseProfile @include(if: $includeReverseProfile) {
      ...GlobalKeys
      ...CommonServiceKeys
    }
    tokens(
      limit: $tokensLimit
      filter: { filterSuspectedScams: $filterSuspectedScams }
    ) @include(if: $includeTokens) {
      ...TokenInfo
    }
  }
}

query token(
  $contract: String!
  $id: Int
  $tokenId: String
  $includeOwnerInfo: Boolean = false
  $includeOwnerProfile: Boolean = false
  $includeOwnerReverseProfile: Boolean = false
) {
  token(contract: $contract, id: $id, tokenId: $tokenId) {
    ...TokenInfo
    ...TokenOwnerInfo @include(if: $includeOwnerInfo)
  }
}

query tokens(
  $filter: TokensFilter!
  $limit: Int = 10
  $cursor: String
  $includeOwnerProfile: Boolean = false
  $includeOwnerReverseProfile: Boolean = false
  $includeOwnerInfo: Boolean = false
) {
  tokens(filter: $filter, limit: $limit, cursor: $cursor) {
    nextCursor
    tokens {
      ...TokenInfo
      ...TokenOwnerInfo @include(if: $includeOwnerInfo)
    }
  }
}

fragment TokenOwnerInfo on TokenMetadata {
  ownerAddress {
    address
    profile @include(if: $includeOwnerProfile) {
      ...GlobalKeys
      ...CommonServiceKeys
    }
    reverseProfile @include(if: $includeOwnerReverseProfile) {
      ...GlobalKeys
      ...CommonServiceKeys
    }
  }
}

fragment TokenInfo on TokenMetadata {
  attributes {
    displayType
    traitType
    value
  }
  contractAddress
  description
  displayName
  id
  imageUrl
  mintedAt
  name
  originalImageUrl
  thumbnailUrl
  tokenId
  type
}

fragment GlobalKeys on Profile {
  avatar: text(key: "avatar")
  description: text(key: "description")
  display: text(key: "display")
  email: text(key: "email")
  keywords: text(key: "keywords")
  mail: text(key: "mail")
  notice: text(key: "notice")
  location: text(key: "location")
  phone: text(key: "phone")
  url: text(key: "url")
}

fragment CommonServiceKeys on Profile {
  github: text(key: "com.github")
  peepeth: text(key: "com.peepeth")
  linkedin: text(key: "com.linkedin")
  twitter: text(key: "com.twitter")
  keybase: text(key: "io.keybase")
  telegram: text(key: "org.telegram")
}
